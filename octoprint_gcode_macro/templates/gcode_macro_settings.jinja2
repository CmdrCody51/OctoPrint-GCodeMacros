<h4>Gcode Macros</h4>

<div class="form-inline" id="newMacroEditor">
    <label for="newGcodeMacro" class="inline">{{ _("Create a new macro") }}</label>
    <div class="input-prepend">
        <span class="add-on">@</span>
        <input id="newGcodeMacro" type="text" data-bind="textInput: newMacroName, css: { 'macro-invalid': !newMacroValid() }">
    </div>
    <button class="btn btn-primary" data-bind="click: createMacro, enable: newMacroValid">
        <i class="fas fa-plus"></i> {{ _("Create Macro") }}
    </button>
</div>

<p>
    <i class="fas fa-exclamation-circle text-info"></i>
    Watch out for duplicate commands! Other plugins often use @ commands for specific functions, as well as
    <a href="https://docs.octoprint.org/en/master/features/atcommands.html">these commands</a> for OctoPrint's core functions.
</p>

<table class="table">
    <thead>
    <tr>
        <td style="width: 20%">{{ _("Macro") }}</td>
        <td style="width: 50%">{{ _("Description") }}</td>
        <td style="width: 30%">{{ _("Actions") }}</td>
    </tr>
    </thead>
    <tbody data-bind="foreach: settings.settings.plugins.gcode_macro.macros">
    <tr>
        <td><code data-bind="text: '@' + command()"></code></td>
        <td class="macro-description" data-bind="text: description"></td>
        <td>
            <button class="btn btn-small" data-bind="click: $root.editMacro">
                <i class="far fa-edit"></i> {{ _("Edit") }}
            </button>
            <button class="btn btn-danger btn-small" data-bind="click: $root.deleteMacro">
                <i class="far fa-trash-alt"></i> {{ _("Delete") }}
            </button>
        </td>
    </tr>
    </tbody>
</table>

<div id="gcodeMacroEditor" class="modal hide fade-in" data-bind="with: selectedMacro">
    <div class="modal-header">
        <button class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
        <h3>{{ _("Editing Macro")}}</h3>
    </div>
    <div class="modal-body">
        <div class="form-inline" id="newMacroEditor">
            <label for="gcodeMacroCommand" class="inline">{{ _("Command") }}</label>
            <div class="input-prepend">
                <span class="add-on">@</span>
                <input id="gcodeMacroCommand" type="text" data-bind="value: command">
            </div>
        </div>

        <label for="macroDescription">{{ _("Description (optional)") }}</label>
        <textarea id="macroDescription" data-bind="value: description"></textarea>

        <label for="macroContent">Macro Content</label>
        <p>
            <i class="fas fa-info-circle text-info"></i>
            You can use the Jinja2 syntax in macros, like OctoPrint's gcode scripts.<br>
            <a href="https://jinja.palletsprojects.com/en/2.11.x/templates">
                <i class="fas fa-external-link-alt"></i> Jinja2 Template Designer Documentation
            </a>
        </p>
        <textarea id="macroContent" data-bind="value: content"></textarea>
        <div class="alert alert-info">
            <i class="fa fa-info-circle text-info"></i>
            <strong>Want to make a long macro?</strong>
            <p>
                It's recommended that you use the Jinja template syntax to include the content as a separate file, rather than
                entering many lines of gcode in the textbox. <a href="https://github.com/cp2004/OctoPrint-GCodeMacros/blob/master/docs/template_syntax.md">See the documentation for details.</a>
            </p>
        </div>
    </div>
    <div class="modal-footer">
        <button class="btn" data-dismiss="modal" aria-hidden="true">{{ _('Close') }}</button>
    </div>
</div>
